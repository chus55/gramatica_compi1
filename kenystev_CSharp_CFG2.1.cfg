;	Consideraciones: 
;		1. Todos las producciones "optional" deben tener una produccion "EPSILON"
;		2. __(Done)__ MÃºltiples clases, interfaces, enums fuera de namespace 

;not implemented on parser
code:
	| compilation-unit

;not implemented on parser
class-modifier:
	| "abstract"
	| EPSILON

; eliminada
constructor-declaration:
	| constructor-declarator maybe-empty-block
;eliminada
constructor-declarator:
	| identifier '(' fixed-parameters ')' constructor-initializer

===================================================

type:
	| "int"
	| "char"
	| "string"
	| "bool"
	| "float"
	| identifier

type-or-var:
	| type
	| "var"

type-or-void:
	| type
	| "void"


+++++++++++++++++
calls:
	type:
;		| fixed-parameter
;		| type-or-void
;		| type-or-var
;		| relational-expression-p
;		| instance-expression
;		| optional-unary-expression
#		| unary-expression
	type-or-void:
;		| interface-method-header
;		| class-member-declaration-options
	type-or-var:
;		| local-variable-declaration
;		| foreach-statement
+++++++++++++++++

===============================================================

is-as-operators:
	| "is"
	| "as"

multiplicative-operators:
	| '*'
	| '/'
	| '%'

additive-operators:
	| '+'
	| '-'
expression-shift-operator: 
	| "<<"
	| ">>"

expression-equality-operator:
	| "=="
	| "!="

expression-relational-operator:
	| '<'
	| '>'
	| "<="
	| ">="

assignment-operator:
	| '='
	| "+="
	| "-="
	| "*="
	| "/="
	| "%="
	| "&="
	| "|="
	| "^="
	| "<<="
	| ">>="

expression-unary-operator:
	| '+'
	| '-'
	| increment-decrement
	| "!"
	| "~"
	| "*"

literal:
	| int-literal
	| char-literal
	| float-literal
	| string-literal
	| "true"
	| "false"

increment-decrement:
	| "++"
	| "--"