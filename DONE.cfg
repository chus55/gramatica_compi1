9. Expressions
==============================================================================================================

unary-expression:
	| expression-unary-operator unary-expression
	| '(' cast-or-parenthesized-expression
	| primary-expression

cast-expression:
	| type ')' unary-expression

cast-or-parenthesized-expression:
	| cast-expression
	| parenthesized-expression

primary-expression:
    | "new" instance-expression primary-expression-p
	| literal primary-expression-p
	| identifier primary-expression-p
	| "this" primary-expression-p

primary-expression-p:
    | '.' identifier optional-funct-or-array-call primary-expression-p
    | increment-decrement primary-expression-p 
    | EPSILON 

instance-expression:
	| type instance-expression-factorized

instance-expression-factorized:
	| '[' expression-list ']' optional-rank-specifier-list optional-array-initializer
	| rank-specifier-list array-initializer
	| '(' argument-list ')' 

################ DONE ################
expression-list:
	| expression optional-expression-list

################ DONE ################
optional-expression-list:
	| expression-list
	| EPSILON

8. Array instantiation
==============================================================================================================

################ DONE ################
optional-funct-or-array-call:
	| '(' argument-list ')'
	| optional-array-access-list 
	| EPSILON

################ DONE ################
optional-array-access-list:
	| '[' expression-list ']' optional-array-access-list
	| EPSILON

#Maybe needed? We'll see.
array-type:
	| built-in-type rank-specifier-list
	| qualified-identifier rank-specifier-list

################ DONE ################
rank-specifier-list: 
	| rank-specifier optional-rank-specifier-list

################ DONE ################
optional-rank-specifier-list:
	| rank-specifier-list
	| EPSILON 	

################ DONE ################
rank-specifier:
	| '[' optional-comma-list ']'

################ DONE ################
optional-comma-list:
	| comma-list
	| EPSILON

################ DONE ################
comma-list: 
	| ',' optional-comma-list

7. Operators
==============================================================================================================

################ DONE ################
expression-unary-operator:
	| '+'
	| '-'
	| increment-decrement
	| "!"
	| "~"
	| "*"

################ DONE ################
is-as-operators:
	| "is"
	| "as"

################ DONE ################
multiplicative-operators:
	| '*'
	| '/'
	| '%'

################ DONE ################
additive-operators:
	| '+'
	| '-'

################ DONE ################
expression-shift-operator: 
	| "<<"
	| ">>"

################ DONE ################
expression-equality-operator:
	| "=="
	| "!="

################ DONE ################
expression-relational-operator:
	| '<'
	| '>'
	| "<="
	| ">="

################ DONE ################
assignment-operator:
	| '='
	| "+="
	| "-="
	| "*="
	| "/="
	| "%="
	| "&="
	| "|="
	| "^="
	| "<<="
	| ">>="

6. Statements support (Pending fixes)
==============================================================================================================

#FIX NON-DETERMINISM
statement:
	| local-variable-declaration ';'
	| embedded-statement

################ DONE ################
statement-list: 
	| statement optional-statement-list

################ DONE ################
optional-statement-list:
	| statement-list
	| EPSILON

################ DONE ################
embedded-statement:
	| maybe-empty-block
	| statement-expression ';'
	| selection-statement
	| iteration-statement
	| jump-statement ';'

################ DONE ################
iteration-statement:
	| while-statement
	| do-statement
	| for-statement
	| foreach-statement

################ DONE ################
while-statement:
	| "while" '(' expression ')' embedded-statement

################ DONE ################
do-statement: 
	| "do" embedded-statement "while" '(' expression ')' ';'

################ DONE ################
for-statement:
	| "for" '(' optional-for-initializer ';' optional-expression ';' optional-statement-expression-list ')' embedded-statement

################ DONE ################
foreach-statement:
	| "foreach" '(' type identifier "in" expression ')' embedded-statement

################ DONE ################
jump-statement:
	| "break"
	| "continue"
	| "return" optional-expression ';'

################ DONE ################
optional-expression: 
	| expression
	| EPSILON

################ DONE ################
optional-for-initializer:
	| local-variable-declaration
	| statement-expression-list
	| EPSILON

################ DONE ################
optional-unary-expression:
    | unary-expression
    | EPSILON

################ DONE ################
selection-statement:
	| if-statement
	| switch-statement

################ DONE ################
switch-statement:
	| "switch" '(' expression ')' '{' optional-switch-section-list '}'

################ DONE ################
optional-switch-section-list:
	| switch-label-list statement-list optional-switch-section-list
	| EPSILON

################ DONE ################
switch-label-list:
	| switch-label switch-label-list-p

################ DONE ################
switch-label-list-p:
	| switch-label-list
	| EPSILON
	
################ DONE ################
switch-label:
	| "case" expression ':'
	| "default" ':'

################ DONE ################
if-statement:
	| "if" '(' expression ')' embedded-statement optional-else-part

################ DONE ################
optional-else-part:
	| else-part
	| EPSILON

################ DONE ################
else-part:
	| "else" embedded-statement	

################ DONE ################
local-variable-declaration:
	| type-or-var variable-declarator-list

################ DONE ################
statement-expression:
	| optional-unary-expression primary-or-parenthesized-expression statement-expression-p

################ DONE ################
statement-expression-p:
	| '(' argument-list ')'
	| increment-decrement
    | EPSILON

################ DONE ################
primary-or-parenthesized-expression:
	| primary-expression
	| '(' parenthesized-expression

################ DONE ################
parenthesized-expression:
	| expression ')' primary-expression-p

################ DONE ################
statement-expression-list:
	| statement-expression statement-expression-list-p

################ DONE ################
statement-expression-list-p:
	| ',' statement-expression statement-expression-list-p
	| EPSILON

################ DONE ################
optional-statement-expression-list:
	| statement-expression-list
	| EPSILON

################ DONE ################
increment-decrement:
	| "++"
	| "--"

5. Classes support
==============================================================================================================

################ DONE ################
literal:
	| int-literal
	| char-literal
	| float-literal
	| string-literal
	| "true"
	| "false"

################ DONE ################
expression:
    | conditional-expression

################ DONE ################
class-declaration:
	| class-modifier "class" identifier inheritance-base class-body optional-body-end

################ DONE ################
class-modifier:
	| "abstract"
	| EPSILON

################ DONE ################
class-body:
	| '{' optional-class-member-declaration-list '}'

################ DONE ################
optional-class-member-declaration-list:
	| class-member-declaration optional-class-member-declaration-list
	| EPSILON

################ DONE ################
class-member-declaration: 
	| encapsulation-modifier class-member-declaration-options

################ DONE ################
class-member-declaration-options:
    | optional-modifier type-or-void class-member-declaration-options-p

################ DONE ################
class-member-declaration-options-p:
	| identifier field-or-method-declaration;
	| constructor-declaration

################ DONE ################
optional-modifier:
    | "static"
    | "virtual"
    | "override"
    | "abstract"
    | EPSILON

################ DONE ################
field-or-method-declaration:
    | field-declaration
	| method-declaration

################ DONE ################
field-declaration: 
	| variable-assigner variable-declarator-list-p ';'

################ DONE ################
variable-assigner:
	| '=' variable-initializer
	| EPSILON

################ DONE ################
variable-declarator-list:
	| identifier variable-assigner variable-declarator-list-p

################ DONE ################
variable-declarator-list-p:
	| ',' variable-declarator-list
	| EPSILON

################ DONE ################
optional-array-initializer:
	| array-initializer
	| EPSILON

################ DONE ################
array-initializer: 
	| '{' optional-variable-initializer-list '}'

################ DONE ################
variable-initializer:
	| expression
	| array-initializer

################ DONE ################
variable-initializer-list:
	| variable-initializer variable-initializer-list-p

################ DONE ################
optional-variable-initializer-list:
	| variable-initializer-list
	| EPSILON

################ DONE ################
variable-initializer-list-p:
	| ',' variable-initializer-list
	| EPSILON

################ DONE ################
argument-list:
	| expression argument-list-p
	| EPSILON

################ DONE ################
argument-list-p:
	| ',' expression argument-list-p
	| EPSILON

################ DONE ################
method-declaration:
	| '(' fixed-parameters ')' maybe-empty-block

################ DONE ################
maybe-empty-block:
	| '{' optional-statement-list '}'
	| ';'

################ DONE ################
constructor-declaration:
	| constructor-declarator maybe-empty-block

################ DONE ################
constructor-declarator:
	| '(' fixed-parameters ')' constructor-initializer

################ DONE ################
constructor-initializer:
	| ':' "base" '(' argument-list ')'
	| EPSILON

################ DONE ################
type:
	| built-in-type optional-rank-specifier-list
	| qualified-identifier optional-rank-specifier-list

################ DONE ################
built-in-type:
	| "int"
	| "char"
	| "string"
	| "bool"
	| "float"

################ DONE ################
type-or-var:
	| type
	| "var"

################ DONE ################
type-or-void:
	| type
	| "void"

4. Interface support
==============================================================================================================

################ DONE ################
fixed-parameter:
	| type identifier

################ DONE ################
fixed-parameters:
	| fixed-parameter fixed-paramaters-p
	| EPSILON

################ DONE ################
fixed-parameters-p:
	| ',' fixed-parameter fixed-parameters-p
	| EPSILON

################ DONE ################
interface-declaration: 
	| "interface" identifier inheritance-base interface-body optional-body-end

################ DONE ################
interface-method-header:
	| type-or-void identifier '(' fixed-parameters ')' 

################ DONE ################
inheritance-base:
	| ':' identifiers-list
	| EPSILON

################ DONE ################
interface-body:
	| '{' interface-method-declaration-list '}'

################ DONE ################
interface-method-declaration-list:
	| interface-method-header ';' interface-method-declaration-list
	| EPSILON

################ DONE ################
identifiers-list:
	| qualified-identifier identifiers-list-p

################ DONE ################
identifiers-list-p:
	| ',' qualified-identifier identifiers-list-p
	| EPSILON

################ DONE ################
qualified-identifier:
	| identifier identifier-attribute

3. Enum support
==============================================================================================================

################ DONE ################
type-declaration-list:
	| type-declaration type-declaration-list
	| EPSILON

################ DONE ################
type-declaration:
	| encapsulation-modifier group-declaration

################ DONE ################
encapsulation-modifier:
	| "public"
	| "protected"
	| "private"
	| EPSILON

################ DONE ################
group-declaration:
	| class-declaration
    | interface-declaration
    | enum-declaration

################ DONE ################
enum-declaration: 
	| "enum" identifier enum-body optional-body-end

################ DONE ################
enum-body:
	| '{' optional-assignable-identifiers-list '}'

################ DONE ################
optional-body-end:
	| ';'
	| EPSILON

################ DONE ################
optional-assignable-identifiers-list:
	| identifier assignment-options
	| EPSILON

################ DONE ################
assignment-options:
	| optional-assignable-identifiers-list-p
	| '=' expression optional-assignable-identifiers-list-p
	| [EPSILON]

################ DONE ################
optional-assignable-identifiers-list-p:
	| ',' optional-assignable-identifiers-list
	| EPSILON	

2. Namespace support
==============================================================================================================

################ DONE ################
namespace-body:
	| '{' optional-using-directive optional-namespace-member-declaration '}'

################ DONE ################
namespace-declaration:
	| "namespace" qualified-identifier namespace-body

################ DONE ################
namespace-member-declaration:
	| namespace-declaration optional-namespace-member-declaration
	| type-declaration-list [optional-namespace-member-declaration]

################ DONE ################
optional-namespace-member-declaration:
	| namespace-member-declaration
	| EPSILON

1. Using directives support
==============================================================================================================

################ DONE ################
identifier-attribute:
	| '.' identifier identifier-attribute
	| EPSILON

################ DONE ################
using-directive:
	| "using" qualified-identifier ';' optional-using-directive
	
################ DONE ################
optional-using-directive:
	| using-directive
	| EPSILON

################ DONE ################
compilation-unit:
	| optional-using-directive [optional-namespace-member-declaration]
	| optional-namespace-member-declaration
	| EPSILON

################ DONE ################
code:
	| compilation-unit
